# Default values for benchmark-workers chart
nameOverride: ""
fullnameOverride: ""

image:
  repository: ghcr.io/temporalio/benchmark-workers
  tag: v1.3.0
  pullPolicy: Always

temporal:
  # GRPC endpoint(s) - can be a single string or array of strings
  # Examples:
  #   grpcEndpoint: "temporal-frontend.temporal:7233"
  #   grpcEndpoint: ["temporal1.temporal:7233", "temporal2.temporal:7233"]
  grpcEndpoint: "temporal-frontend.temporal:7233"
  
  # Namespace(s) - can be a single string or array of strings
  # Examples:
  #   namespace: "default"
  #   namespace: ["namespace1", "namespace2", "namespace3"]
  namespace: "default"
  
  taskQueue: "benchmark"
  workflowTaskPollers: "16"
  activityTaskPollers: "8"
  
  tls:
    enabled: false
    # TLS configuration can be provided as single values (reused for all namespaces)
    # or as arrays (one per namespace)
    # Provide these values or use an existing Secret
    key: ""
    cert: ""
    ca: ""
    disableHostVerification: false
    
    # For multi-namespace with different TLS configs, use arrays:
    # keys: ["key1-content", "key2-content"]
    # certs: ["cert1-content", "cert2-content"] 
    # cas: ["ca1-content", "ca2-content"]
    keys: []
    certs: []
    cas: []
    
    # If using an existing secret, specify the name(s)
    # Can be a single secret (reused for all namespaces) or array of secrets
    existingSecret: ""
    existingSecrets: []

metrics:
  enabled: true
  # The port to expose metrics on
  port: 9090
  # The Prometheus endpoint path and listening address
  prometheusEndpoint: ":9090"
  # Headless service configuration
  service:
    annotations: {}
  # ServiceMonitor configuration for Prometheus Operator
  serviceMonitor:
    enabled: true
    # Additional labels to add to the ServiceMonitor
    additionalLabels: {}
    # Scrape interval
    interval: 15s
    # Scrape timeout
    scrapeTimeout: 10s

workers:
  # Number of worker replicas
  replicaCount: 1
  # Resources configuration
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 1Gi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

soakTest:
  enabled: true
  # Number of soak test replicas
  replicaCount: 1
  concurrentWorkflows: "10"
  workflowType: "ExecuteActivity"
  workflowArgs: '{ "Count": 3, "Activity": "Echo", "Input": { "Message": "test" } }'
  # Resources configuration
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 200m
    #   memory: 256Mi

nodeSelector: {}
tolerations: []
affinity: {} 